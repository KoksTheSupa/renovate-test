module(name = "ftb")

bazel_dep(name = "aspect_bazel_lib", version = "2.15.3")
bazel_dep(name = "aspect_rules_js", version = "2.3.7")
bazel_dep(name = "bazel_features", version = "1.29.0")
bazel_dep(name = "gazelle", version = "0.43.0")
bazel_dep(name = "googleapis", version = "0.0.0-20241220-5e258e33.bcr.1")
bazel_dep(name = "rules_buf", version = "0.3.0")
bazel_dep(name = "rules_go", version = "0.54.0")
bazel_dep(name = "rules_multirun", version = "0.12.0")
bazel_dep(name = "rules_nodejs", version = "6.3.5")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "toolchains_protoc", version = "0.4.1")

# Не обновлять, пока в bazel не впилят precompiled protoc!
# https://github.com/protocolbuffers/protobuf/issues/19558
bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "rules_python", version = "0.40.0")
bazel_dep(name = "rules_distroless", version = "0.5.1")

protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")
protoc.toolchain(
    google_protobuf = "com_google_protobuf",
    version = "v28.0",
)
use_repo(protoc, "com_google_protobuf", "toolchains_protoc_hub")

register_toolchains("@toolchains_protoc_hub//:all")
#bazel_dep(name = "libwebp", version = "1.4.0") TODO(mrdan4es): попробовать перейти после обновления bazel на 9.0.0

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "protovalidate",
    sha256 = "85561d0b3a95c73c672f2c9cd39b2da6bd4fa95634fa961922b04f65a97b71cc",
    strip_prefix = "protovalidate-0.11.1",
    url = "https://github.com/bufbuild/protovalidate/archive/refs/tags/v0.11.1.tar.gz",
)

http_file = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")

http_file(
    name = "walg",
    downloaded_file_path = "wal-g",
    executable = True,
    sha256 = "0ed747c95d2ee3ab0ab9319e8dfa7b16af425eba6b022870130dbdc35aa346c1",
    url = "https://github.com/wal-g/wal-g/releases/download/v3.0.7/wal-g-pg-ubuntu-20.04-amd64",
)

apt = use_extension("@rules_distroless//apt:extensions.bzl", "apt")
apt.install(
    name = "debian12",
    lock = "//build/oci:debian12.lock.json",
    manifest = "//build/oci:debian12.yaml",
)
use_repo(apt, "debian12")

include("//build/bazel:go.MODULE.bazel")

include("//build/bazel:oci.MODULE.bazel")

include("//build/bazel:py.MODULE.bazel")

include("//build/bazel:js.MODULE.bazel")
